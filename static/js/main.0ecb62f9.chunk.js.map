{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/AddTodo.js","App.js","index.js"],"names":["Todo","todo","removeTodo","updateTodo","useState","edit","setEdit","done","setDone","inputText","setInputText","toggleEdit","text","key","displayedText","style","textDecoration","firstButtonProps","title","className","onClick","rows","value","onChange","e","target","TodoList","todos","map","AddTodo","addTodo","type","placeholder","trim","App","JSON","parse","localStorage","getItem","setTodos","useEffect","setItem","stringify","Date","getTime","filter","newText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQA+CeA,MA5Cf,YAA+C,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAAa,EAEpBC,oBAAS,GAFW,mBAErCC,EAFqC,KAE/BC,EAF+B,OAGpBF,oBAAS,GAHW,mBAGrCG,EAHqC,KAG/BC,EAH+B,OAIVJ,mBAAS,IAJC,mBAIrCK,EAJqC,KAI1BC,EAJ0B,KAMtCC,EAAa,WACjBD,EAAaT,EAAKW,MAClBN,GAASD,IAUJQ,EAAaZ,EAAbY,IAAKD,EAAQX,EAARW,KAENE,EAAgBP,EAAO,sBAAMQ,MAAO,CAACC,eAAgB,gBAA9B,SAAgDJ,IAAeA,EAEtFK,EAAmB,CAAEC,MAAQb,EAAO,gBAAkB,eAE5D,OACE,sBAAKc,UAAU,OAAf,WACId,GAAQ,wBAAQc,UAAU,cAAcD,MAAM,cAAcE,QAAS,kBAflDZ,GAASD,IAepB,SACPA,EAAO,cAAC,IAAD,IAAY,cAAC,IAAD,MAEtB,qBAAKY,UAAU,YAAf,SACGd,EAAO,0BAAUgB,KAAM,EAAGC,MAAOb,EAAWc,SAAU,SAAAC,GAAC,OAAId,EAAac,EAAEC,OAAOH,UAAaR,IAEjG,sBAAKK,UAAU,eAAf,UACE,wBAAQD,MAAM,cAAcE,QAAS,kBAAMT,KAA3C,SACGN,EAAO,cAAC,IAAD,IAAc,cAAC,IAAD,MAExB,kDAAYY,GAAZ,IAA8BG,QAASf,EAAO,kBAtBlDF,EAAWU,EAAKJ,QAChBE,KAqByE,kBAAMT,EAAWW,IAAtF,SACGR,EAAO,cAAC,IAAD,IAAc,cAAC,IAAD,YAZDQ,ICjBhBa,MARf,YAAoD,IAAjCC,EAAgC,EAAhCA,MAAOzB,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WACpC,OACE,qBAAKgB,UAAU,YAAf,SACIQ,EAAMC,KAAI,SAAA3B,GAAI,OAAI,cAAC,EAAD,CAAqBA,KAAMA,EAAMC,WAAYA,EAAYC,WAAYA,GAA1DF,EAAKY,WCc3BgB,MAlBf,YAA6B,IAAXC,EAAU,EAAVA,QAAU,EAEQ1B,mBAAS,IAFjB,mBAEnBK,EAFmB,KAERC,EAFQ,KAU1B,OACE,sBAAKS,UAAU,gBAAf,UACE,uBAAOY,KAAK,OAAOC,YAAY,cAAcV,MAAOb,EAAWc,SAAU,SAAAC,GAAMd,EAAac,EAAEC,OAAOH,UACrG,wBAAQF,QATO,WACbX,EAAUwB,SAAQH,EAAQrB,GAE9BC,EAAa,MAMX,sBCUSwB,MArBf,WAAgB,IAAD,EAEa9B,mBAAS+B,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAFnE,mBAENX,EAFM,KAECY,EAFD,KAYb,OARAC,qBAAU,WACRH,aAAaI,QAAQ,QAASN,KAAKO,UAAUf,MAC7C,CAACA,IAOD,sBAAKR,UAAU,YAAf,UACE,0CACA,cAAC,EAAD,CAASW,QANG,SAAAlB,GAAI,OAAI2B,EAAS,GAAD,mBAAKZ,GAAL,CAAY,CAACd,KAAK,IAAI8B,MAAOC,UAAWhC,cAOpE,cAAC,EAAD,CAAUe,MAAOA,EAAOzB,WART,SAAAW,GAAG,OAAI0B,EAASZ,EAAMkB,QAAO,SAAA5C,GAAI,OAAIA,EAAKY,MAAQA,OAQjBV,WANjC,SAACU,EAAKiC,GAAN,OAAkBP,EAASZ,EAAMC,KAAI,SAAA3B,GAAI,OAAIA,EAAKY,MAAQA,EAAM,CAACA,MAAKD,KAAMkC,GAAW7C,aCT5G8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0ecb62f9.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {AiFillCloseCircle, AiFillEdit, BiCheck, IoIosDoneAll, MdWork, TiCancel} from \"react-icons/all\";\r\n\r\nfunction Todo({todo, removeTodo, updateTodo}) {\r\n\r\n  const [edit, setEdit] = useState(false)\r\n  const [done, setDone] = useState(false)\r\n  const [inputText, setInputText] = useState(\"\")\r\n\r\n  const toggleEdit = () => {\r\n    setInputText(todo.text)\r\n    setEdit(!edit)\r\n  }\r\n\r\n  const toggleDone = () => setDone(!done)\r\n\r\n  const onUpdateTodo = () => {\r\n    updateTodo(key, inputText)\r\n    toggleEdit()\r\n  }\r\n\r\n  const {key, text} = todo\r\n\r\n  const displayedText = done ? <span style={{textDecoration: \"line-through\"}}>{text}</span> : text\r\n\r\n  const firstButtonProps = { title: (edit ? \"apply changes\" : \"delete todo\") }\r\n\r\n  return (\r\n    <div className='todo' key={key}>\r\n      {!edit && <button className=\"toggle-done\" title=\"toggle done\" onClick={() => toggleDone()}>\r\n        {done ? <MdWork/> : <IoIosDoneAll/>}\r\n      </button>}\r\n      <div className='todo-text'>\r\n        {edit ? <textarea rows={2} value={inputText} onChange={e => setInputText(e.target.value)}/> : (displayedText)}\r\n      </div>\r\n      <div className='todo-options'>\r\n        <button title=\"toggle edit\" onClick={() => toggleEdit()}>\r\n          {edit ? <TiCancel/> : <AiFillEdit/>}\r\n        </button>\r\n        <button {...firstButtonProps} onClick={edit ? () => onUpdateTodo() : () => removeTodo(key)}>\r\n          {edit ? <BiCheck /> : <AiFillCloseCircle/>}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList({todos, removeTodo, updateTodo}) {\r\n  return (\r\n    <div className=\"todo-list\">\r\n      { todos.map(todo => <Todo key={todo.key} todo={todo} removeTodo={removeTodo} updateTodo={updateTodo} />) }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React, {useState} from 'react';\r\n\r\nfunction AddTodo({addTodo}) {\r\n\r\n  const [inputText, setInputText] = useState(\"\")\r\n\r\n  const addNewTodo = () => {\r\n    if (inputText.trim()) addTodo(inputText)\r\n    else return\r\n    setInputText(\"\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-todo-form\">\r\n      <input type=\"text\" placeholder=\"New todo...\" value={inputText} onChange={e => {setInputText(e.target.value)}} />\r\n      <button onClick={addNewTodo}>Add!</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTodo;","import React, {useState, useEffect} from 'react';\r\nimport TodoList from \"./components/TodoList\";\r\nimport AddTodo from \"./components/AddTodo\";\r\n\r\nfunction App() {\r\n\r\n  const [todos, setTodos] = useState(JSON.parse(localStorage.getItem(\"todos\")) || [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n  },[todos])\r\n\r\n  const removeTodo = key => setTodos(todos.filter(todo => todo.key !== key))\r\n  const addTodo = text => setTodos([...todos, {key: new Date().getTime(), text}])\r\n  const updateTodo = (key, newText) => setTodos(todos.map(todo => todo.key === key ? {key, text: newText} : todo))\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>TODO App</h1>\r\n      <AddTodo addTodo={addTodo} />\r\n      <TodoList todos={todos} removeTodo={removeTodo} updateTodo={updateTodo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}